<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coding.mybatis.demo3.mapper.EmpMapper">
    <select id="getAllEmpOld" resultType="com.coding.mybatis.demo3.pojo.Emp">
        <!--select eid, emp_name empName, age, sex, email
        from t_emp-->
        select * from t_emp
    </select>

    <!--resultMap：设置自定义映射关系
    id：唯一标志，不能重复
    type：设置映射关系中的实体类类型
    子标签：
    id：设置主键的映射关系
    column：设置普通字段的映射关系
    属性：
    property：设置映射关系中的属性名，必须是type属性所设置的实体类类型中的属性名
    column：设置映射关系中的字段名，必须是sql语句查询出的字段名-->
    <resultMap id="empResultMap" type="com.coding.mybatis.demo3.pojo.Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
    </resultMap>
    <select id="getAllEmp" resultMap="empResultMap">
        select *
        from t_emp
    </select>


    <!--处理多对一映射关系方式一：级联属性赋值-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="dept.did" column="did"/>
        <result property="dept.deptName" column="dept_name"/>
    </resultMap>

    <!--处理多对一映射关系方式二：association-->
    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="dept.did" column="did"/>
        <result property="dept.deptName" column="dept_name"/>
        <!--association：处理多对一的映射关系
        property：需要处理多对一的映射关系的属性名
        javaType：该属性的类型-->
        <association property="dept" javaType="Dept">
            <id property="did" column="did"/>
            <result property="deptName" column="dept_name"/>
        </association>
    </resultMap>
    <select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
        select *
        from t_emp
                 left join t_dept td on t_emp.did = td.did
        where t_emp.eid = #{eid}
    </select>

    <!--处理多对一映射关系方式三：分步查询（还能结合延迟查询，更优）-->
    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <!--select：设置分步查询的sql的唯一标识
        column：设置分步查询的条件
        fetchType：当开启了全局的延迟加载后，使用此属性手动控制延迟加载的效果
        fetchType="lazy|eager"：lazy表示延迟加载，eager表示立即加载-->
        <association property="dept" select="com.coding.mybatis.demo3.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="did" fetchType="lazy"/>
    </resultMap>
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select *
        from t_emp
        where eid = #{eid}
    </select>

    <select id="getDeptAndEmpByStepTwo" resultType="com.coding.mybatis.demo3.pojo.Emp">
        select *
        from t_emp
        where did = #{did}
    </select>


</mapper>